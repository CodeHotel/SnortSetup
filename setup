#!/bin/bash


base_dir=$(pwd)
get_first_subdirectory() {
    local parent_dir="$1"
    echo $(find "$parent_dir" -mindepth 1 -maxdepth 1 -type d | sort | head -n 1)
}

echo "Select Language (언어를 선택하세요) [1|2]"
echo "1. English"
echo "2. 한국어"

read -p "(1 or 2): " choice

case $choice in
    1)
        echo "This is an installer script for snort3 by cisco. It does not directly contain any code related to snort, and there is absolutely no warranty. Press y to continue to the first step and check dependencies"
	script_path="./check-dependency"
        ;;
    2)
        echo "이 스크립트는 Cisco의 Snort3설치를 도와주는 스크립트입니다. 직/간접적으로 Snort3의 코드를 포함하고 있지 않으며, 발생하는 문제에 대한 어떠한 책임도 지지 않습니다. y를 누르시 첫 단계인 의존성 패키지 확인을 진행합니다"
	script_path="./check-dependency-kor"
        ;;
    *)
        echo "Invalid selection. Exiting."
        exit 1
        ;;
esac

read -p "[y/n] : " yn
case $yn in
    [Yy]* ) ;;
    * ) exit 0;;
esac

cd scripts
"$script_path"
cd $base_dir

case $? in
    0)
	;;
    1)
	exit 1
	;;
    2)
	case $choice in
	    1)
		echo "무시하고 설치하시겠습니까?"
		;;
	    *)
		echo "Would you like to ignore and continue?"
		;;
	esac
	read -p "[y/n]: " yn
	case $yn in
	    [Yy]*)
		;;
            *)
		exit 1
		;;
	esac
	;;
    3)
	exit 1
	;;
    *)
	exit 1
	;;
esac

case $choice in
    2)
        echo "TCMalloc 패키지가 설치되었습니까?"
	;;
    *)
	echo "Has TCMalloc Package been installed?"
	;;
esac

read -p "[y/n]: " tcmalloc

case $choice in
    2)
        echo "LibML을 사용하시겠습니까? LibML은 머신러닝을 사용하여 패킷을 분석하는 snort의 라이브러리이자 기능입니다."
	echo "[경고] LibML 1.0.0 기준, gcc 13으로 컴파일 시 오류가 발생합니다."
	echo "현재 버전(12버전 및 그 이하는 문제가 없습니다):"
	gcc --version
	echo "gcc 13을 사용하는 경우 이를 해결하기 위해서는 Cisco측에서Google Flatbuffers 버전을 올려주거나, 사용자가 직접 gcc 12 (예: 12.2.1)및 호환 CMake(예: 3.25.1) 버전으로 다운그레이드하신 후, 현재 디렉토리의 scripts/dependencies 의 [본인 패키지매니저]-required 텍스트 파일에서 gcc, g++, CMake를 삭제하고 다시 진행하셔야 합니다."
	echo "LibML을 컴파일하시려면 y, 아니라면 n을 입력해주세요."
	;;
    *)
        echo "Would you like to use LibML? LibML is a feature of Snort that uses Machine Learning on packet analysis."
	echo "[Warning] As for LibML 1.0.0, gcc 13 throws compile error"
	echo "Current gcc Version(version 12 and lower have NO PROBLEMS):"
	gcc --version
	echo "If the above version is displayed as greater than version 13, then your options are to await Cisco to update LibML's dependencies for Google Flatbuffer, or to manually downgrade your gcc version to 12(e.g. 12.2.1) and cmake version to compatible(e.g. 3.25.1), go to current_directory/scripts/dependencies/your_package_manager-required and delete gcc, gpp, CMake lines"
	echo "To compile LibML, press y"

	;;
esac

read -p "[y/n]: " libmlchoice

set -e

if [ -d "tmp/libdaq" ]; then
    sudo rm -rf tmp/libdaq/*
else
    mkdir -p tmp/libdaq
fi
if [ -d "tmp/libml" ]; then
    sudo rm -rf tmp/libml/*
else
    mkdir -p tmp/libml
fi
if [ -d "tmp/snort3" ]; then
    sudo rm -rf tmp/snort3/*
else
    mkdir -p tmp/snort3
fi
sudo $base_dir/scripts/getlibdaq
if [ "$libmlchoice" = "y" ] || [ "$libmlchoice" = "Y" ]; then  
    sudo $base_dir/scripts/getlibml
fi
sudo $base_dir/scripts/getsnort

if [ "$libmlchoice" = "y" ] || [ "$libmlchoice" = "Y" ]; then  
    first_libml_folder=$(get_first_subdirectory "${base_dir}/tmp/libml")
fi
first_libdaq_folder=$(get_first_subdirectory "${base_dir}/tmp/libdaq")
first_snort3_folder=$(get_first_subdirectory "${base_dir}/tmp/snort3")

export CFLAGS="-O3 -march=native -s"
export CXXFLAGS="-O3 -march=native -s"
export CPPFLAGS="-O3 -march=native -s"

if [ "$libmlchoice" = "y" ] || [ "$libmlchoice" = "Y" ]; then  
    cd $first_libml_folder
    ./configure.sh
    cd $base_dir
fi

cd $first_libdaq_folder
autoreconf -ivf
./configure
cd $base_dir

case $choice in
    2)
        echo "위의 libdaq 컴파일 목록에 'nfqueue'가 yes로 되어 있는지, 그리고 이외에 필요한 모듈이 포함되어 있는지 확인하시오. y를 입력하면 라이브러리 컴파일을 진행하며, 수 초부터 기기에 따라 10분 이내의 컴파일 시간이 걸릴 수 있습니다."
	;;
    *)
	echo "Check if the above libdaq compile list states 'nfqueue' as yes, and if the list looks OK in general. Selecting y will initiate compilation of libraries, which may take few seconds up to 10 minutes depending on machine"
	;;
esac
read -p "[y/n]: " yn
case $yn in
    [Yy]*)
	;;
    *)
	exit 1
	;;
esac

case $choice in
    2)
        echo "snort  선행 라이브러리의 컴파일을 시작합니다. 시간이 다소 오래 걸릴 수 있습니다."
	;;
    *)
	echo "Initiating make and install for libraries required by snort3. This may take a while.."
	;;
esac

cd $first_libml_folder
cd build
make && sudo make install
cd $base_dir

cd $first_libdaq_folder
make && sudo make install
cd $base_dir

cd $first_snort3_folder
case $tcmalloc in
    [yY]*)
	./configure_cmake.sh --build-type=Release --enable-tcmalloc
	;;
    *)
	./configure_cmake.sh --build-type=Release
	;;
esac
case $choice in
    2)
        echo "위의 Snort3 컴파일 옵션에 nfq가 포함되어 있는지, 정상적으로 모듈이 포함되었습니까? y를 선택하면 Snort3의 컴파일이 진행되며, 이는 상당한 시간이 소모될 수 있습니다. 컴파일 완료시 자동으로 설치되며, 스크립트가 종료됩니다."
	;;
    *)
	echo "Check if the above Snort3 compile options contain nfq, and needed modules are successfully detected. Selecting y will initiate compilation of Snort3, which will take a long time. Once compilation has ended, the script will automatically install it and terminate."
	;;
esac
read -p "[y/n]: " yn
case $yn in
    [Yy]*)
	;;
    *)
	exit 1
	;;
esac

cd build
make && sudo make install
cd $base_dir
case $choice in
    2)
        echo "임시 설치파일을 삭제합니다.."
	;;
    *)
	echo "Removing temp files.."
	;;
esac

sudo rm -rf tmp

case $choice in
    2)
        echo "Snort3의 설치가 성공적으로 완료되었습니다. 런타임 설정은 setruntime 스크립트를 실행하십시오"
	;;
    *)
	echo "The installation of Snort3 has been completed. For setting runtime daemon, run the 'setruntime' script within this directory."
	;;
esac

sudo ln -s /usr/local/snort/bin/snort /usr/local/bin/snort

cd $base_dir
